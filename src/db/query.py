# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
# source: query.sql
from typing import Any, Optional

import sqlalchemy
import sqlalchemy.ext.asyncio

from db import models


UPDATE_ROOM_AMMOUNT = """-- name: update_room_ammount \\:exec
UPDATE lead_info
	SET quantidade_de_quartos = :p2
	WHERE nome_do_usuario = :p1
"""


UPDATE_SUN_INCIDENCE = """-- name: update_sun_incidence \\:exec
UPDATE lead_info
	SET posicao_do_sol = :p2
	WHERE nome_do_usuario = :p1
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def update_room_ammount(self, *, nome_do_usuario: Optional[str], quantidade_de_quartos: Optional[int]) -> None:
        self._conn.execute(sqlalchemy.text(UPDATE_ROOM_AMMOUNT), {"p1": nome_do_usuario, "p2": quantidade_de_quartos})

    def update_sun_incidence(self, *, nome_do_usuario: Optional[str], posicao_do_sol: Optional[Any]) -> None:
        self._conn.execute(sqlalchemy.text(UPDATE_SUN_INCIDENCE), {"p1": nome_do_usuario, "p2": posicao_do_sol})


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def update_room_ammount(self, *, nome_do_usuario: Optional[str], quantidade_de_quartos: Optional[int]) -> None:
        await self._conn.execute(sqlalchemy.text(UPDATE_ROOM_AMMOUNT), {"p1": nome_do_usuario, "p2": quantidade_de_quartos})

    async def update_sun_incidence(self, *, nome_do_usuario: Optional[str], posicao_do_sol: Optional[Any]) -> None:
        await self._conn.execute(sqlalchemy.text(UPDATE_SUN_INCIDENCE), {"p1": nome_do_usuario, "p2": posicao_do_sol})
