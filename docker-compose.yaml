name: teste-homer

services:
  database:
    container_name: homer-db
    image: postgres:latest
    restart: always
    # healthcheck:
    # test: [ "CMD-SHELL", "pg_isready -u $${DATABASE_USER}" ]
    # interval: 1m
    # timeout: 15s
    # retries: 5
    # start_period: 30s
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data:rw
      - ./docker/postgres/scripts/:/docker-entrypoint-initdb.d/:rx

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - prometheus-data:/prometheus:rw
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    env_file:
      - .env
    ports:
      - "9090:9090"
    # volumes:
    #   - prometheus-data:/prometheus:rw

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana:rw
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/:ro
    env_file:
      - .env
    ports:
      - "3000:3000"

  postgres-prom:
    container_name: postgres_prom
    image: quay.io/prometheuscommunity/postgres-exporter
    restart: always
    environment:
      # env interpolation: https://docs.docker.com/compose/how-tos/environment-variables/variable-interpolation/
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    expose:
      - 9187

volumes:
  pg-data: {}
  prometheus-data: {}
  grafana-data: {}
